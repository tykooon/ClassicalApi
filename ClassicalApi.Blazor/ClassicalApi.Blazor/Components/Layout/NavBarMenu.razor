@using System.Security.Claims
@using ClassicalApi.Blazor.Services

@inject ICurrentUserService currentUserService
@inject NavigationManager navManager

<nav class="navbar fixed-top bg-primary">
    <RadzenStack Orientation="Orientation.Horizontal" Gap="0" Style="padding-right:1em;width:100%;" JustifyContent="JustifyContent.SpaceBetween" AlignItems="AlignItems.Center">
        <div class="d-flex align-items-center">
            <RadzenButton Variant="Variant.Outlined" data-bs-toggle="offcanvas" class="p-1 mx-1" data-bs-target="#offcanvasNavbar" aria-controls="offcanvasNavbar" aria-label="Toggle navigation">
                <img src="/src/ClassicalApiLogo.svg" height="40" />
            </RadzenButton>
            <RadzenText class="mb-0 ms-1 mobile-hide font-calligraphic" Style="color:aliceblue; align-self:center;">
                Eternal Classics Links
            </RadzenText> 
        </div>
        <div>
            <AuthorizeView>
                <Authorized>
                    <div class="d-inline-flex align-items-center">
                        <span class="me-3" style="color:azure;">@context.User.FindFirst(ClaimTypes.Name)?.Value.ToString()</span>
                        <LogoutButton />
                    </div>
                </Authorized>
                <NotAuthorized>
                    <LoginButton />
                </NotAuthorized>
            </AuthorizeView>
        </div>
    </RadzenStack>
    <div class="offcanvas text-light bg-dark offcanvas-start" tabindex="-1" id="offcanvasNavbar" aria-labelledby="offcanvasNavbarLabel">
        <div class="offcanvas-header">
            <h5 class="offcanvas-title" id="offcanvasNavbarLabel">Main Menu</h5>
            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="offcanvas" aria-label="Close"></button>
        </div>
        <div class="offcanvas-body">
            <RadzenPanelMenu>
                <RadzenPanelMenuItem class="my-2" Style="font-size:larger;" Text="Home" Icon="home" Path="/" data-bs-dismiss="offcanvas" />
                <RadzenPanelMenuItem class="my-2" Style="font-size:larger;" Text="Composers" Icon="queue_music" Path="/composers" data-bs-dismiss="offcanvas" />
                <RadzenPanelMenuItem class="my-2" Style="font-size:larger;" Text="Media Links" Icon="link" Path="/medialinks" data-bs-dismiss="offcanvas" />
                <RadzenPanelMenuItem class="my-2" Style="font-size:larger;" Text="User" Icon="account_box" Path="/user" data-bs-dismiss="offcanvas" />
                @if (isSuperAdmin)
                {
                    <RadzenPanelMenuItem class="my-2" Style="font-size:larger;" Text="Super Admin" Icon="dangerous" Path="/superadmin" data-bs-dismiss="offcanvas" />
                }
            </RadzenPanelMenu>
            <EditForm class="d-flex mt-3" role="search" Model=searchValue OnSubmit="@(() => SearchHandler(searchValue))" id="search-line" >
                <input class="form-control me-2" @bind-value="searchValue" type="search" placeholder="Search" aria-label="Search">
                <button class="btn btn-outline-success" type="submit" data-bs-dismiss="offcanvas">Search</button>
            </EditForm>
        </div>
    </div>
</nav>

@code{
    private string searchValue = "";
    private bool isSuperAdmin = false;

    private void SearchHandler(string? value = null){
        if(value == null || string.IsNullOrWhiteSpace(value))
        {
            navManager.NavigateTo($"composers", true);
        }
        else
        {
            navManager.NavigateTo($"composers?search={searchValue}", true);
        }
    }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        isSuperAdmin = await currentUserService.IsSuperAdmin();
    }
}
